
class SubirOrganizacao(LoginRequiredMixin, View):

    def get(self, request):
        organizacoes = Organizacao.objects.filter(pk=request.user.funcionario.organizacao.pk).values()
        funcionairos = Funcionario.objects.filter(organizacao=self.request.user.funcionario.organizacao)
        niveis = Nivel.objects.filter(organizacao=self.request.user.funcionario.organizacao)

        lOrganizacao1= []
        lFuncionarios = []
        lNiveis = []
        organizacaoDic = {}



        for funcionario in funcionairos:
            dic = {
                'id': funcionario.pk,
                'nome': funcionario.nome,
                'cpf': funcionario.cpf,
                'cargo': funcionario.cargo,
                'endereco': funcionario.endereco,
                'telefone': funcionario.telefone,
                'ativo': funcionario.ativo,
                #'foto': funcionario.foto,
                'foto': "Foto",
                'usuario': {
                    'id': funcionario.user.pk,
                    'email': funcionario.user.username,
                    'senha': funcionario.user.password
                }
            }
            lFuncionarios.append(dic)

        for nivel in niveis.values():
            nivelsuperior = nivel['nivelSuperior_id']
            nivelinfeiror = nivel['nivelInferior_id']
            if(nivel['nivelSuperior_id'] == None):
                nivelsuperior = '0'
            if(nivel['nivelInferior_id'] == None):
                nivelinfeiror = '0'
            if(nivel['nivelSuperior_id'] == None and nivel['nivelInferior_id'] == None):
                nivelsuperior = '0'
                nivelinfeiror = '0'

            setoresnivel = Setor.objects.select_related('nivel').filter(
                nivel__organizacao=self.request.user.funcionario.organizacao, nivel__pk=nivel['id'])
            lSetores = []
            for setor in setoresnivel.values():
                funcionarios = Funcionario.objects.filter(setor__pk=setor['id'])
                lfunc = []
                for func in funcionarios:
                    dic = {
                        'id': func.pk
                    }
                    lfunc.append(dic)

                dicSetor1 = {
                    'id': setor['id'],
                    'gerente': {'id': setor['gerente_id']},
                    'nome': setor['nome'],
                    'funcionarios': lfunc
                }
                lSetores.append(dicSetor1)
            solicitacoes = Solicitacao.objects.prefetch_related('nivel').filter(nivel__id=nivel['id'])
            lSocilitacoes = []
            for solicitacao in solicitacoes:
                lisa = []
                for sol in solicitacao.itens.values('id', 'nome'):

                    dicitenssolicitacao = {
                        'id':sol['id'],
                        'nome':sol['nome'],
                    }
                    lisa.append(dicitenssolicitacao)
                dic = {
                    'id': solicitacao.pk,
                    'nome': solicitacao.tipo,
                    'descricao': solicitacao.descricao,
                    'tipo': 'SOLICITACAO',
                    'tipoItem': lisa
                }

                lSocilitacoes.append(dic)


            dic = {
                'id': nivel['id'],
                'nome': nivel['nome'],
                'nivelSuperior': nivelsuperior,
                'nivelInferior': nivelinfeiror,
                'responsavel': {'id': nivel['funcionario_id']},
                'setores': lSetores,
                'tipoSolicitacaoDelegacao': lSocilitacoes
            }
            lNiveis.append(dic)
        for organizacao in organizacoes:
            # lOrganizacao1.append(organizacao)
            organizacaoDic  = {
                'id' : organizacao['id'],
                'nome' : organizacao['nome'],
                'cnpj' : organizacao['cnpj'],
                'endereco' : organizacao['endereco'],
                'telefone' : organizacao['telefone'],
                'situacao' : organizacao['situacao'],
                'funcionarios' : lFuncionarios,
                'niveis' : lNiveis,
            }

        lOrganizacao1.append(organizacaoDic)
        a = 0
        resp = requests.post(url='http://localhost:8080/SAPH/saph/organizacao/lista/',
                              data=json.dumps(lOrganizacao1),
                              headers={'content-type': 'application/json'})

        if(resp.status_code==200 or resp.status_code==201):
            return HttpResponse("ESSA MIZERA DEU CERTO")
        else:
            return HttpResponse("ESSA MIZERA DEU ERRADO")